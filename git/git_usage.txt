Merkezi git sunucusunda oluşturulan repo'yu lokale almak:

- Localimdeki git versiyonu aşağıdaki şekilde:
	d:\projects\git>git --version
	git version 2.19.1.windows.1

- Kişisel bilgisayarımda c:\Users\hsenturk\.gitconfig dosyasının içeriği aşağıdaki şekilde:

[user]
	name = hsenturk	
	email = husnu.yahoo@com.tr
[http]
	sslVerify = false
[core]
	editor = 'C:\\Users\\hsenturk\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe' --wait

- Gitea web arayüzünden kişisel sayfam altında içi boş private bir test reposu oluşturdum. 

- git clone komutu kullanarak repo'yu lokale aldım. Repo boş olduğu için aşağıdaki uyarıyı aldım.

d:\projects\git>git clone https://git.hsenturk.com.tr/hsenturk/test.git
Cloning into 'test'...
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
Username for 'https://git.hsenturk.com.tr': hsenturk
Password for 'https://hsenturk@git.hsenturk.com.tr':
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
warning: You appear to have cloned an empty repository.

- Lokalde test klasörü içersinde status komutu aşağıdaki sonucu veriyor:

		d:\projects\git>cd test

		d:\projects\git\test>git status
		On branch master

		No commits yet

		nothing to commit (create/copy files and use "git add" to track)

- Lokalde test klasörü içersinde 2 adet dosya oluşturdum.
	testfile1.txt
	testfile2.txt
	
- Bunları tek bir dosya ismi belirterek staged duruma almak için aşağıdaki komut kullanılabilir.
	git add <file or directory name>
veya gid add . komutuyla bütün yeni dosyalar staged duruma çekilebilir. 
git add . komutu çalıştırıldıktan sonra git status komutuyla kontrol edildiğinde aşağıdaki çıktı ile karşılaşılır:


d:\projects\git\test>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   testfile1.txt
        new file:   testfile2.txt

- Eğer staged durumdaki dosyaları geri çekmek istersek git reset komutunu kullanabiliriz.

d:\projects\git\test>git reset

d:\projects\git\test>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        testfile1.txt
        testfile2.txt

nothing added to commit but untracked files present (use "git add" to track)

- Kaldığımız yerden devam edersek dosyaları eklemek için sırasıyla "git add ." ve git commit -m "2 dosya eklendi" komutları çalıştırılabilir.

d:\projects\git\test>git commit -m "2 dosya eklendi"
[master (root-commit) 72137d7] 2 dosya eklendi
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testfile1.txt
 create mode 100644 testfile2.txt
 
 - Dosyaların içersine master ifadesini yazdım ve bu değişiklikler için de git add . ve git commit komutlarını kullandım.
 
 d:\projects\git\test>git add .

d:\projects\git\test>git commit -m "dosyalara master yazdım."
[master cdbd3a4] dosyalara master yazdım.
 2 files changed, 2 insertions(+)

- Eklenen 2 dosya remote'ta yok. Git push komutuyla bu dosyalar origin/master'a gönderilir.

d:\projects\git\test>git push
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
Username for 'https://git.hsenturk.com.tr': hsenturk
Password for 'https://hsenturk@git.hsenturk.com.tr':
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 464 bytes | 154.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0)
remote: . Processing 1 references
remote: Processed 1 references in total
To https://git.hsenturk.com.tr/hsenturk/test.git
 * [new branch]      master -> master

- Lokaldeki bir dosyada değişiklik yaptıktan sonra lokaldeki dosyalarla remote'takinin farkını görmek:

d:\projects\git\test>git commit -m "testfile1.txt degistirildi"
[master 45e6a7b] testfile1.txt degistirildi
 1 file changed, 2 insertions(+), 1 deletion(-)

d:\projects\git\test>git diff master origin/master
diff --git a/testfile1.txt b/testfile1.txt
index 9b02ef1..8b25206 100644
--- a/testfile1.txt
+++ b/testfile1.txt
@@ -1,2 +1 @@
-master
-master degisiklik
\ No newline at end of file
+master
\ No newline at end of file


- Mevcut branch'leri görüntüleme
-- Bütün branch'leri görüntülemek için:
d:\projects\git\test>git branch -a
* master
  remotes/origin/master
  
-- Sadece remote branch'leri görüntülemek için:
d:\projects\git\test>git branch -r
  origin/master

- Lokalde yeni bir branch oluşturmak:

d:\projects\git\test>git checkout -b development
Switched to a new branch 'development'

d:\projects\git\test>git branch -a
* development
  master
  remotes/origin/master

- Mevcut branch'ler arasında geçiş yapmak

d:\projects\git\test>git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

d:\projects\git\test>git checkout development
Switched to branch 'development'


- development branch'indeyken dosyaları güncelledim.

d:\projects\git\test>git status
On branch development
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   testfile1.txt
        modified:   testfile2.txt

no changes added to commit (use "git add" and/or "git commit -a")

- git add ve git commit komutlarıyla değişiklikler development branch'ine commit'lendi:

d:\projects\git\test>git add .

d:\projects\git\test>git commit -m "development branch'indeyken 2 dosya değişti"
[development f6d001f] development branch'indeyken 2 dosya değişti
 2 files changed, 6 insertions(+), 2 deletions(-)

- tekrar master branch'ine dönüldüğünde dosyaların değişmemiş hallerine switch edildiği, değişikliklerin development branch'ine aktarıldığı görülür:

d:\projects\git\test>git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

- lokalde oluşturulan yeni bir branch'in remote'a commit'lenmesi "git push -u origin development"

d:\projects\git\test>git push -u origin development
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
Username for 'https://git.hsenturk.com.tr': hsenturk
Password for 'https://hsenturk@git.hsenturk.com.tr':
fatal: NullReferenceException encountered.
   Object reference not set to an instance of an object.
Enumerating objects: 10, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (7/7), 651 bytes | 325.00 KiB/s, done.
Total 7 (delta 0), reused 0 (delta 0)
remote:
remote: Create a new pull request for 'development':
remote:   https://git.hsenturk.com.tr/hsenturk/test/compare/master...development
remote:
remote: . Processing 1 references
remote: Processed 1 references in total
To https://git.hsenturk.com.tr/hsenturk/test.git
 * [new branch]      development -> development
Branch 'development' set up to track remote branch 'development' from 'origin'.

- lokal'de master'dan farklı bir branch'ten branch oluşturmak: master'dan branch oluşturmaktan farklı değildir. Öncelikle git checkout <branch_ismi> komutuyla yeni branch oluşturacağımız branch'e switch edilir. Sonrasında git checkout -b <yeni_branch_ismi> konutu çalıştırılır.

d:\projects\git\test>git checkout -b feature_branch
Switched to a new branch 'feature_branch'

d:\projects\git\test>git branch -a
  development
* feature_branch
  master
  remotes/origin/development
  remotes/origin/master




- Bir dosyada yapılan unstaged değişiklikleri geri almak için 

d:\projects\git\test>git checkout -- testfile1.txt
